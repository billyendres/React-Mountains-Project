{"version":3,"sources":["images/whistler.jpg","images/parkCity.jpg","images/sunshine.jpg","images/thredbo.jpg","MountainList.js","MountainInfo.js","Nav.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","MountainList","react_default","a","createElement","className","this","props","mountains","map","mountain","key","name","src","alt","Component","MountainInfo","location","facts","react_router_dom","to","Nav","mountainLinks","id","concat","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","App","_this","src_Nav","react_router","exact","path","render","src_MountainList_0","match","params","currentMountain","find","toLowerCase","src_MountainInfo_0","Object","assign","defaultProps","whistler","sunshine","parkCity","thredbo","ReactDOM","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.7e6ff986.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/whistler.e1a0e347.jpg\";","module.exports = __webpack_public_path__ + \"static/media/parkCity.ef38f1fe.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sunshine.2ee7928d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/thredbo.a58be82d.jpg\";","import React, { Component } from \"react\";\nimport \"./MountainList.css\";\n\nclass MountainList extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"MountainList\">\n\t\t\t\t<h1 className=\"display-1 text-center\">Mountain list</h1>\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t{this.props.mountains.map(mountain => (\n\t\t\t\t\t\t\t<div className=\"Mountain col-lg-6 text-center\" key={mountain.name}>\n\t\t\t\t\t\t\t\t<img src={mountain.src} alt={mountain.name} />\n\t\t\t\t\t\t\t\t<h3>{mountain.name}</h3>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default MountainList;\n","import React, { Component } from \"react\";\nimport \"./MountainInfo.css\";\nimport { Link } from \"react-router-dom\";\n\nclass MountainInfo extends Component {\n\trender() {\n\t\tlet { mountain } = this.props;\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"MountainInfo row justify-content-center mt-5\">\n\t\t\t\t\t<div className=\"col-11 col-lg-5\">\n\t\t\t\t\t\t<div className=\"MountainInfo-card card\">\n\t\t\t\t\t\t\t<img className=\"card-img-top\" src={mountain.src} alt={mountain.name} />\n\t\t\t\t\t\t\t<div className=\"card-body\">\n\t\t\t\t\t\t\t\t<h2 className=\"card-title\">{mountain.name}</h2>\n\t\t\t\t\t\t\t\t<h4 className=\"card-subtitle text-muted\">{mountain.location}</h4>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<ul className=\"list-group-item\">{mountain.facts}</ul>\n\t\t\t\t\t\t\t<div className=\"card-body\">\n\t\t\t\t\t\t\t\t<Link className=\"btn btn-info\" to=\"/mountains\">\n\t\t\t\t\t\t\t\t\tBack To Mountains\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default MountainInfo;\n","import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nclass Nav extends Component {\n\trender() {\n\t\t//Map Over all Links and return in NavBar\n\t\tconst mountainLinks = this.props.mountains.map(mountain => (\n\t\t\t<li className=\"nav-item\" key={mountain.id}>\n\t\t\t\t<NavLink to={`/mountains/${mountain.id}`} className=\"nav-link\">\n\t\t\t\t\t{mountain.name}\n\t\t\t\t</NavLink>\n\t\t\t</li>\n\t\t));\n\t\treturn (\n\t\t\t<nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n\t\t\t\t<NavLink to=\"/mountains\" className=\"navbar-brand\">\n\t\t\t\t\tMountains\n\t\t\t\t</NavLink>\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"navbar-toggler\"\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tdata-toggle=\"collapse\"\n\t\t\t\t\tdata-target=\"#navbarText\"\n\t\t\t\t\taria-controls=\"navbarText\"\n\t\t\t\t\taria-expanded=\"false\"\n\t\t\t\t\taria-label=\"Toggle navigation\"\n\t\t\t\t>\n\t\t\t\t\t<span className=\"navbar-toggler-icon\" />\n\t\t\t\t</button>\n\t\t\t\t<div className=\"collapse navbar-collapse\" id=\"navbarText\">\n\t\t\t\t\t<ul className=\"navbar-nav mr-auto\">{mountainLinks}</ul>\n\t\t\t\t</div>\n\t\t\t</nav>\n\t\t);\n\t}\n}\n\nexport default Nav;\n","import React, { Component } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport MountainList from \"./MountainList\";\nimport MountainInfo from \"./MountainInfo\";\nimport Nav from \"./Nav\";\n\nimport whistler from \"./images/whistler.jpg\";\nimport parkCity from \"./images/parkCity.jpg\";\nimport sunshine from \"./images/sunshine.jpg\";\nimport thredbo from \"./images/thredbo.jpg\";\n\nclass App extends Component {\n\tstatic defaultProps = {\n\t\tmountains: [\n\t\t\t{\n\t\t\t\tname: \"Whistler\",\n\t\t\t\tid: \"whistler\",\n\t\t\t\tlocation: \"British Columbia, CA\",\n\t\t\t\tsrc: whistler,\n\t\t\t\tfacts: [\n\t\t\t\t\t\"Whistler Blackcomb is a ski resort located in Whistler, British Columbia, Canada. By many measures it is the largest ski resort in North America and has the greatest uphill lift capacity. It features the Peak 2 Peak Gondola for moving between Whistler and Blackcomb mountains at the top. With all of this capacity, Whistler Blackcomb is also often the busiest ski resort, often besting 2 million visitors a year.\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"Sunshine Village\",\n\t\t\t\tid: \"sunshine-village\",\n\t\t\t\tlocation: \"Alberta, CA\",\n\t\t\t\tsrc: sunshine,\n\t\t\t\tfacts: [\n\t\t\t\t\t\"Sunshine Village is a Canadian ski resort, located on the Continental Divide of the Canadian Rockies within Banff National Park in Alberta and Mt Assiniboine Provincial Park in British Columbia, Canada. It is one of three major ski resorts located in the Banff National Park.\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"Park City\",\n\t\t\t\tid: \"park-city\",\n\t\t\t\tlocation: \"Utah, USA\",\n\t\t\t\tsrc: parkCity,\n\t\t\t\tfacts: [\n\t\t\t\t\t\"Park City is a city in Summit County, Utah, United States. It is considered to be part of the Wasatch Back. The city is 32 miles (51 km) southeast of downtown Salt Lake City and 20 miles (32 km) from Salt Lake City's east edge of Sugar House along Interstate 80. \"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: \"Thredbo\",\n\t\t\t\tid: \"thredbo\",\n\t\t\t\tlocation: \"NSW, Australia\",\n\t\t\t\tsrc: thredbo,\n\t\t\t\tfacts: [\n\t\t\t\t\t\"Thredbo is a village and ski resort in the Snowy Mountains of New South Wales, Australia, and a part of the Snowy Monaro Regional Council. It is about 500 kilometres south of Sydney, accessible by the Alpine Way via Cooma, Berridale, and Jindabyne.\"\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t};\n\trender() {\n\t\tconst getMountain = props => {\n\t\t\tlet id = props.match.params.id;\n\t\t\tlet currentMountain = this.props.mountains.find(\n\t\t\t\tmountain => mountain.id.toLowerCase() === id.toLowerCase()\n\t\t\t);\n\t\t\treturn <MountainInfo {...props} mountain={currentMountain} />;\n\t\t};\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Nav mountains={this.props.mountains} />\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath=\"/mountains\"\n\t\t\t\t\t\trender={() => <MountainList mountains={this.props.mountains} />}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route exact path=\"/mountains/:id\" render={getMountain} />\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n\t<BrowserRouter>\n\t\t<App />\n\t</BrowserRouter>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}